---
 - hosts: web
   vars:
     - wp_mysql_db: wordpress
     - wp_mysql_user: wordpress
     - wp_mysql_password: "randompassword"
     - sql_rootpw: "mypass"
     - http_host: "nicksblog.com"
     - http_port: 8080
     - http_conf: "nicksblogs.com.conf"

   become: yes
   tasks: 
      - name: Install WordPress and supporting applications on web server
        apt: 
          name: "{{ item }}"
          state: present
          update_cache: yes
        loop:
          - apache2
          - php
          - php-common
          - php-cli
          - php-gd
          - php-curl #You can add or remove PHP extensions according to your choice
          - php-mysqlnd
          - php-fpm
          - php-mysqli
          - mysql-server
          - wordpress
          - python
          - pip 

      - name: Install PyMySQL
        pip:
          name: pymysql
          state: present

      - name: Create MySQL DB
        mysql_db:
          login_unix_socket: /var/run/mysqld/mysqld.sock
          name: "{{ wp_mysql_db }}"
          login_user: root
          login_password: "{{ sql_rootpw }"
          state: present

      - name: Create WordPress mysql user
        mysql_user:
          name: "{{ wp_mysql_user }}"
          password: "{{ wp_mysql_password }}"
          priv: '*.*:ALL'
          login_unix_socket: /var/run/mysqld/mysqld.sock

      - name: Copy PHP config file to server
        template:
          src: "/home/devops/project2/wp-config.php.j2"
          dest: "/var/www/wordpress/wp-config.php"

      - name: Set up Apache VirtualHost
        template:
          src: "/home/devops/project2/apache.conf.j2"
          dest: "/etc/apache2/sites-available/{{ http_conf }}"
          notify: Reload Apache
  
      - name: Create document root
        file:
          path: "/var/www/{{ http_host }}"
          state: directory
          owner: "devops"
          group: "root"
          mode: '0755'

      - name: Disable default Apache site
        shell: /usr/sbin/a2dissite 000-default.conf
        notify: Restart Apache

      - name: Enable rewrite module
        shell: /usr/sbin/a2enmod rewrite
        notify: Reload Apache

      - name: Enable new site
        shell: /usr/sbin/a2ensite {{ http_conf }}
        notify: Reload Apache

      - name: UFW - Allow HTTP on port 8080
        ufw:
          rule: allow
          port: "{{ http_port }}" 
          proto: tcp

   handlers:
     - name: Reload Apache
       service:
         name: apache2
         state: reloaded

     - name: Restart Apache
       service:
         name: apache2
         state: restarted
